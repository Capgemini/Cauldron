<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Extension Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Extension class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Cauldron.Interception.Cecilator.Extension" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Cauldron.Interception.Cecilator" /><meta name="file" content="Methods_T_Cauldron_Interception_Cecilator_Extension" /><meta name="guid" content="Methods_T_Cauldron_Interception_Cecilator_Extension" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Cauldron Win32 Libraries<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\2cfbe5dd-6343-46e4-a622-1e6023028555.htm" title="Cauldron Win32 Libraries" tocid="roottoc">Cauldron Win32 Libraries</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Cauldron_Interception_Cecilator.htm" title="Cauldron.Interception.Cecilator" tocid="N_Cauldron_Interception_Cecilator">Cauldron.Interception.Cecilator</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Cauldron_Interception_Cecilator_Extension.htm" title="Extension Class" tocid="T_Cauldron_Interception_Cecilator_Extension">Extension Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Cauldron_Interception_Cecilator_Extension.htm" title="Extension Methods" tocid="Methods_T_Cauldron_Interception_Cecilator_Extension">Extension Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_AreEqual.htm" title="AreEqual Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_AreEqual">AreEqual Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_AreReferenceAssignable.htm" title="AreReferenceAssignable Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_AreReferenceAssignable">AreReferenceAssignable Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_BetterResolve.htm" title="BetterResolve Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_BetterResolve">BetterResolve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_CreateBuilder.htm" title="CreateBuilder Method " tocid="M_Cauldron_Interception_Cecilator_Extension_CreateBuilder">CreateBuilder Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_EqualsEx.htm" title="EqualsEx Method " tocid="M_Cauldron_Interception_Cecilator_Extension_EqualsEx">EqualsEx Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_Get.htm" title="Get Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_Get">Get Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetBaseClasses.htm" title="GetBaseClasses Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetBaseClasses">GetBaseClasses Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetChildrenType.htm" title="GetChildrenType Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetChildrenType">GetChildrenType Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeName.htm" title="GetGenericResolvedTypeName Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeName">GetGenericResolvedTypeName Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeNames.htm" title="GetGenericResolvedTypeNames Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeNames">GetGenericResolvedTypeNames Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetInterfaces.htm" title="GetInterfaces Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetInterfaces">GetInterfaces Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_GetMethodReference.htm" title="GetMethodReference Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_GetMethodReference">GetMethodReference Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetMethodReferences.htm" title="GetMethodReferences Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetMethodReferences">GetMethodReferences Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetMethodReferencesByInterfaces.htm" title="GetMethodReferencesByInterfaces Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetMethodReferencesByInterfaces">GetMethodReferencesByInterfaces Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetNestedTypeParent.htm" title="GetNestedTypeParent Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetNestedTypeParent">GetNestedTypeParent Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetNestedTypes.htm" title="GetNestedTypes Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetNestedTypes">GetNestedTypes Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetSequencePoint.htm" title="GetSequencePoint Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetSequencePoint">GetSequencePoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetStackTrace.htm" title="GetStackTrace Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetStackTrace">GetStackTrace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetTypeDefinition.htm" title="GetTypeDefinition Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetTypeDefinition">GetTypeDefinition Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_GetValidName.htm" title="GetValidName Method " tocid="M_Cauldron_Interception_Cecilator_Extension_GetValidName">GetValidName Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_HasAttribute.htm" title="HasAttribute Method " tocid="M_Cauldron_Interception_Cecilator_Extension_HasAttribute">HasAttribute Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_Implements.htm" title="Implements Method " tocid="M_Cauldron_Interception_Cecilator_Extension_Implements">Implements Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_IndexOf.htm" title="IndexOf Method " tocid="M_Cauldron_Interception_Cecilator_Extension_IndexOf">IndexOf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_IsInclosedInHandlers.htm" title="IsInclosedInHandlers Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_IsInclosedInHandlers">IsInclosedInHandlers Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_IsSubclassOf.htm" title="IsSubclassOf Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_IsSubclassOf">IsSubclassOf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_Log.htm" title="Log Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_Log">Log Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_NewCoder.htm" title="NewCoder Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_NewCoder">NewCoder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_Resolve.htm" title="Resolve Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_Resolve">Resolve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_ResolveGenericArguments.htm" title="ResolveGenericArguments Method " tocid="M_Cauldron_Interception_Cecilator_Extension_ResolveGenericArguments">ResolveGenericArguments Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_ThisOrNull.htm" title="ThisOrNull Method " tocid="M_Cauldron_Interception_Cecilator_Extension_ThisOrNull">ThisOrNull Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_To__1.htm" title="To(T) Method " tocid="M_Cauldron_Interception_Cecilator_Extension_To__1">To(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_ToBuilderType.htm" title="ToBuilderType Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_ToBuilderType">ToBuilderType Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_ToType.htm" title="ToType Method " tocid="M_Cauldron_Interception_Cecilator_Extension_ToType">ToType Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Cauldron_Interception_Cecilator_Extension_TypeOf.htm" title="TypeOf Method " tocid="Overload_Cauldron_Interception_Cecilator_Extension_TypeOf">TypeOf Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Cauldron_Interception_Cecilator_Extension_With__2.htm" title="With(TType, TNew) Method " tocid="M_Cauldron_Interception_Cecilator_Extension_With__2">With(TType, TNew) Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/cauldron2.png" /></td><td class="titleColumn"><h1>Extension Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="T_Cauldron_Interception_Cecilator_Extension.htm">Extension</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual.htm">AreEqual(AssemblyDefinition, AssemblyDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_1.htm">AreEqual(MethodReference, MethodReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_2.htm">AreEqual(ModuleDefinition, ModuleDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_3.htm">AreEqual(ModuleDefinition, Type)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_4.htm">AreEqual(TypeDefinition, TypeDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_5.htm">AreEqual(TypeReference, BuilderType)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_6.htm">AreEqual(TypeReference, TypeDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_7.htm">AreEqual(TypeReference, TypeReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_8.htm">AreEqual(Type, BuilderType)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_9.htm">AreEqual(Type, ModuleDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_10.htm">AreEqual(Type, TypeDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_11.htm">AreEqual(Type, TypeReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreEqual_12.htm">AreEqual(Type, Type)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreReferenceAssignable_2.htm">AreReferenceAssignable(TypeReference, TypeReference)</a></td><td><div class="summary">
            Checks if <span class="parameter">toBeAssigned</span> is assignable to <span class="parameter">type</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreReferenceAssignable.htm">AreReferenceAssignable(BuilderType, BuilderType)</a></td><td><div class="summary">
            Checks if <span class="parameter">toBeAssigned</span> is assignable to <span class="parameter">type</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_AreReferenceAssignable_1.htm">AreReferenceAssignable(<span id="LST41919622_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_0?cpp=array&lt;");</script>BuilderType<span id="LST41919622_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_1?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST41919622_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_2?cpp=array&lt;");</script>BuilderType<span id="LST41919622_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Checks if <span class="parameter">toBeAssigned</span> is assignable to <span class="parameter">type</span>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_BetterResolve.htm">BetterResolve(MethodReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_BetterResolve_1.htm">BetterResolve(TypeReference)</a></td><td><div class="summary">
            Tries to resolve the <span class="nolink">TypeReference</span> to its <span class="nolink">TypeDefinition</span> using <span class="nolink">Resolve<span id="LST41919622_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span>.
            If <span class="nolink">Resolve<span id="LST41919622_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span> returns null it will try to resolve it using a list of types.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_CreateBuilder.htm">CreateBuilder</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_EqualsEx.htm">EqualsEx</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Get.htm">Get(Collection<span id="LST41919622_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>CustomAttribute<span id="LST41919622_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Get__1.htm">Get<span id="LST41919622_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST41919622_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IEnumerable<span id="LST41919622_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST41919622_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetBaseClasses.htm">GetBaseClasses</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetChildrenType.htm">GetChildrenType</a></td><td><div class="summary">
            Tries to get the child type of an array of IEnumerable.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeName.htm">GetGenericResolvedTypeName</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeNames.htm">GetGenericResolvedTypeNames(GenericInstanceMethod)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetGenericResolvedTypeNames_1.htm">GetGenericResolvedTypeNames(GenericInstanceType)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetInterfaces.htm">GetInterfaces</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetMethodReference.htm">GetMethodReference(TypeReference, String, <span id="LST41919622_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_12?cpp=array&lt;");</script>TypeReference<span id="LST41919622_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetMethodReference_1.htm">GetMethodReference(TypeReference, String, Int32)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetMethodReference_2.htm">GetMethodReference(TypeReference, String, <span id="LST41919622_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_14?cpp=array&lt;");</script>Type<span id="LST41919622_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_15?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetMethodReferences.htm">GetMethodReferences</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetMethodReferencesByInterfaces.htm">GetMethodReferencesByInterfaces</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetNestedTypeParent.htm">GetNestedTypeParent</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetNestedTypes.htm">GetNestedTypes</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetSequencePoint.htm">GetSequencePoint</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetStackTrace.htm">GetStackTrace</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetTypeDefinition.htm">GetTypeDefinition</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_GetValidName.htm">GetValidName</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_HasAttribute.htm">HasAttribute</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Implements.htm">Implements</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_IndexOf.htm">IndexOf</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_IsInclosedInHandlers.htm">IsInclosedInHandlers(Method, Instruction)</a></td><td><div class="summary">
            Returns true if the instruction defined by <span class="parameter">instruction</span> is enclosed by a try-catch-finally.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_IsInclosedInHandlers_1.htm">IsInclosedInHandlers(Method, Instruction, ExceptionHandlerType)</a></td><td><div class="summary">
            Returns true if the instruction defined by <span class="parameter">instruction</span> is enclosed by a try-catch-finally.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_IsSubclassOf_1.htm">IsSubclassOf(TypeReference, TypeReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_IsSubclassOf.htm">IsSubclassOf(BuilderType, BuilderType)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Log_3.htm">Log(ICecilatorObject, LogTypes, Object)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Log.htm">Log(ICecilatorObject, LogTypes, BuilderType, Object)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Log_1.htm">Log(ICecilatorObject, LogTypes, Method, Object)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Log_2.htm">Log(ICecilatorObject, LogTypes, Property, Object)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_NewCoder.htm">NewCoder(CatchThrowerCoder)</a></td><td><div class="summary">
            Creates a new coder.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_NewCoder_1.htm">NewCoder(CoderBase)</a></td><td><div class="summary">
            Creates a new coder.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_NewCoder_2.htm">NewCoder(Method)</a></td><td><div class="summary">
            Creates a new coder.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Resolve.htm">Resolve(Field)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Resolve_1.htm">Resolve(Field, BuilderType)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_Resolve_2.htm">Resolve(Field, Method)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ResolveGenericArguments.htm">ResolveGenericArguments</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ThisOrNull.htm">ThisOrNull</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_To__1.htm">To<span id="LST41919622_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST41919622_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ToBuilderType.htm">ToBuilderType(TypeDefinition)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ToBuilderType_1.htm">ToBuilderType(TypeReference)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ToBuilderType_2.htm">ToBuilderType(Type)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_ToType.htm">ToType</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_TypeOf.htm">TypeOf(ILProcessor, BuilderType)</a></td><td><div class="summary">
            Creates a typeof() implementation for the given type <span class="parameter">type</span></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_TypeOf_1.htm">TypeOf(ILProcessor, TypeReference)</a></td><td><div class="summary">
            Creates a typeof() implementation for the given type <span class="parameter">type</span></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Cauldron_Interception_Cecilator_Extension_With__2.htm">With<span id="LST41919622_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TType, TNew<span id="LST41919622_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST41919622_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Cauldron_Interception_Cecilator_Extension.htm">Extension Class</a></div><div class="seeAlsoStyle"><a href="N_Cauldron_Interception_Cecilator.htm">Cauldron.Interception.Cecilator Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://raw.githubusercontent.com/Capgemini/Cauldron/master/LICENSE" target="_blank">https://raw.githubusercontent.com/Capgemini/Cauldron/master/LICENSE</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alexander.schunk%40capgemini.com?Subject=Cauldron Win32 Libraries">alexander.schunk@capgemini.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>
<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cauldron.XAML.Theme.Styles"
             xmlns:i="clr-namespace:Cauldron.XAML.Interactivity;assembly=Cauldron.Win32.WPF"
             xmlns:validation="clr-namespace:Cauldron.XAML.Validation;assembly=Cauldron.Win32.WPF.Validation"
             xmlns:t="clr-namespace:Cauldron.XAML.Theme"
             mc:Ignorable="d">

    <Style TargetType="TabControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectedIndex" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>

                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled" Margin="0">
                            <TabPanel x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                        </ScrollViewer>

                        <ToggleButton x:Name="ToggleButton" Grid.Row="0" Grid.Column="1" Width="14" Focusable="false" ClickMode="Release"
                                        Foreground="{StaticResource {x:Static t:CauldronTheme.ComboBoxArrowBrush}}" HorizontalAlignment="Right" Style="{x:Null}"
                                        Background="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" BorderBrush="Transparent" Template="{StaticResource ComboBoxToggleButton}" />

                        <Popup x:Name="Popup" Grid.ColumnSpan="2" Grid.Row="0" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=ToggleButton}" IsOpen="{Binding ElementName=ToggleButton, Path=IsChecked }">
                            <Border x:Name="DropDown" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,0,5,5" MaxWidth="{TemplateBinding ActualWidth}" MinWidth="128"
                                        BorderThickness="1" BorderBrush="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" Background="{StaticResource {x:Static t:CauldronTheme.DropdownBackgroundBrush}}">
                                <ItemsControl KeyboardNavigation.DirectionalNavigation="Contained" Margin="0" ItemsSource="{TemplateBinding ItemsSource}" DisplayMemberPath="{TemplateBinding DisplayMemberPath}">
                                    <i:Interaction.Behaviours>
                                        <t:TabsControlItemsControlBehaviour />
                                    </i:Interaction.Behaviours>
                                </ItemsControl>
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" RenderingBias="Performance" Color="Black" Opacity="0.6" />
                                </Border.Effect>
                            </Border>
                        </Popup>

                        <Rectangle x:Name="decorationBorder" Grid.ColumnSpan="2" Grid.Row="1" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                            <i:Interaction.Behaviours>
                                <t:TabControlDecorationBorderBehavior />
                            </i:Interaction.Behaviours>
                        </Rectangle>

                        <Border x:Name="Border" Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" Background="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}"
                                KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" ContentTemplateSelector="{StaticResource CauldronTemplateSelector}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Height" Value="19" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MaxWidth" Value="300" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="t:TabItemProperties.Header" Value="" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="i:StyleInteraction.Template">
            <Setter.Value>
                <i:InteractionTemplate>
                    <t:TabItemBehaviour />
                </i:InteractionTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="Root" MaxWidth="{TemplateBinding MaxWidth}">
                        <!--
                            Visual state groups on TabItem does not support everything that we would like the tabs to do.
                            The colouring will be done in the behaviour
                        -->
                        <Border x:Name="border" Margin="0" Padding="0" BorderThickness="0" Background="Transparent">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="4,0,24,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="header" Text="{Binding Path=(t:TabItemProperties.Header), RelativeSource={RelativeSource TemplatedParent}}"
                                        ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" TextAlignment="Left"
                                        TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Padding="0">
                                    <Validation.ErrorTemplate>
                                        <ControlTemplate />
                                    </Validation.ErrorTemplate>
                                </TextBlock>
                                <TextBlock Foreground="{Binding Foreground, ElementName=header}" Grid.Column="1" Text="*">
                                    <i:Interaction.Behaviours>
                                        <t:ChangeAwareIsChangedBehaviour />
                                    </i:Interaction.Behaviours>
                                </TextBlock>
                            </Grid>
                        </Border>

                        <Rectangle x:Name="FocusVisualStyle" Margin="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                       StrokeThickness="1" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="{StaticResource {x:Static t:CauldronTheme.HoveredTextBrush}}" StrokeDashArray="1 2" Visibility="Hidden" />

                        <Button x:Name="closeButton" Visibility="Collapsed" Content="&#x0072;" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="3,3,3,1" Focusable="False">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Width" Value="15" />
                                    <Setter Property="Height" Value="15" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.HoveredTextBrush}}" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="FontFamily" Value="Webdings" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightOverlayBrush}}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DarkOverlayBrush}}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledTextBrush}}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>

                                                    <Rectangle x:Name="background" Fill="{TemplateBinding Background}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                                                    <TextBlock x:Name="text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" Margin="0,0,0,1" Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusVisualStyle" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
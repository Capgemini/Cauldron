<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cauldron.XAML.Theme.Styles"
             xmlns:i="clr-namespace:Cauldron.XAML.Interactivity;assembly=Cauldron.Win32.WPF"
             xmlns:validation="clr-namespace:Cauldron.XAML.Validation;assembly=Cauldron.Win32.WPF.Validation"
             xmlns:t="clr-namespace:Cauldron.XAML.Theme"
             mc:Ignorable="d">

    <Style TargetType="StatusBar">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.HoveredTextBrush}}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBar">
                    <Border MinHeight="24" Background="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" BorderThickness="0" BorderBrush="{x:Null}" Margin="0" Padding="2,1">
                        <Border.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="Red" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="4,0" />
                            </Style>
                        </Border.Resources>
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="t:Enforcer.ForcedResource">
            <Setter.Value>
                <ResourceDictionary>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="t:Enforcer.ForegroundColorAutoSelect" Value="dummy" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="2" />
                    </Style>

                    <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
                        <Setter Property="t:Enforcer.ForegroundColorAutoSelect" Value="dummy" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="MinWidth" Value="50" />
                    </Style>

                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Background" Value="#22000000" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>

                    <Style TargetType="Button">
                        <Setter Property="MinWidth" Value="24" />
                        <Setter Property="ClipToBounds" Value="True" />
                        <Setter Property="MaxHeight" Value="24" />
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="Padding" Value="4,0" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="t:Enforcer.ForegroundColorAutoSelect" Value="dummy" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>

                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightOverlayBrush}}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DarkOverlayBrush}}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledTextBrush}}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>

                                        <Border x:Name="background" Background="{TemplateBinding Background}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" BorderBrush="{x:Null}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          RecognizesAccessKey="True">

                                                <ContentPresenter.Resources>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                                    </Style>
                                                </ContentPresenter.Resources>
                                            </ContentPresenter>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="6" Margin="0" Fill="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StatusBarItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="StatusBarItem">
                    <ContentPresenter Height="23" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource {x:Static t:CauldronTheme.DisabledTextColor}}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
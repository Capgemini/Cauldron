<ResourceDictionary
             x:Class="Cauldron.XAML.Theme.ExpanderStyle"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cauldron.XAML.Theme"
             xmlns:t="clr-namespace:Cauldron.XAML.Theme"
             mc:Ignorable="d">

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Path Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                  Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"
                                                  Width="7" Height="7" x:Name="ArrowExpanded" IsHitTestVisible="False" Focusable="False"
                                                  SnapsToDevicePixels="True" UseLayoutRounding="True" StrokeThickness="1" Data="M 0 7 L 7 7 L 7 0 z" />

            <Path Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"
                                                  Stroke="{TemplateBinding Foreground}" IsHitTestVisible="False" Focusable="False"
                                                  Width="6" Height="11" x:Name="ArrowCollapsed" Margin="4,0,0,0"
                                                  SnapsToDevicePixels="True" UseLayoutRounding="True" StrokeThickness="1" Data="M 0 1 L 0 10 M 0 1 L 5 6 M 0 10 L 5 5" />

            <Border x:Name="border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                <Setter TargetName="ArrowExpanded" Property="Fill" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                <Setter TargetName="ArrowExpanded" Property="Stroke" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                <Setter TargetName="ArrowCollapsed" Property="Stroke" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
                <Setter TargetName="ArrowExpanded" Property="Fill" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
                <Setter TargetName="ArrowExpanded" Property="Stroke" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
                <Setter TargetName="ArrowCollapsed" Property="Stroke" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0,4,4,16" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="1" Margin="0,1,0,1" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" IsHitTestVisible="False" Focusable="False">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="FontWeight" Value="SemiBold" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <ToggleButton x:Name="toggle" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" OverridesDefaultStyle="True" Style="{x:Null}"
                                          BorderBrush="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" Focusable="True" BorderThickness="{TemplateBinding BorderThickness}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Template="{StaticResource ExpanderToggleButton}" />

                            <ContentPresenter x:Name="Content"
                                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                              Grid.Row="1" Grid.Column="1" Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="toggle" Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.LightOverlayBrush}}" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
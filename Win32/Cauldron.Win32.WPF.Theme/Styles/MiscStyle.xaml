<ResourceDictionary
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Cauldron.XAML.Theme"
             xmlns:i="clr-namespace:Cauldron.XAML.Interactivity;assembly=Cauldron.Win32.WPF"
             xmlns:t="clr-namespace:Cauldron.XAML.Theme"
             mc:Ignorable="d">

    <Style TargetType="{x:Type t:HeaderDisplay}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="1,6,0,2" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:HeaderDisplay}">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <TextBlock i:Localized.Text="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" TextWrapping="NoWrap" TextAlignment="Left" TextTrimming="CharacterEllipsis" IsHitTestVisible="False" />
                        <TextBlock Visibility="{TemplateBinding IsMandatory}" Text="*" Margin="3,-3,0,2" TextAlignment="Left" IsHitTestVisible="False" FontSize="22" Height="16" Foreground="Tomato" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type t:ValidationDisplay}">
        <Setter Property="Height" Value="14" />
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type t:ValidationDisplay}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0">
                        <Grid Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}">
                            <Ellipse Grid.Row="1" Grid.Column="0" Fill="Tomato" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTip="{TemplateBinding ToolTip}" />
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="!" IsHitTestVisible="False" FontFamily="Segoe UI" FontWeight="ExtraBold" Foreground="{StaticResource {x:Static t:CauldronTheme.HoveredTextBrush}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
    </Style>

    <Style TargetType="Border">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="PanningMode" Value="Both" />
    </Style>

    <Style TargetType="Image">
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="RenderOptions.CachingHint" Value="Cache" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Auto" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
    </Style>

    <Style TargetType="ContentControl">
        <Setter Property="ContentTemplateSelector" Value="{StaticResource CauldronTemplateSelector}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="MaxWidth" Value="360" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" BorderBrush="{StaticResource {x:Static t:CauldronTheme.ButtonbackBrush}}"
                            BorderThickness="1" CornerRadius="4">
                        <ContentPresenter Margin="8" ContentTemplateSelector="{StaticResource CauldronTemplateSelector}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="TextAlignment" Value="Justify" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.TextBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="27" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Margin="1,6,6,0" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" />
                        <Rectangle VerticalAlignment="Bottom" Height="2" Fill="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                        <Border Grid.Row="1"  BorderBrush="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" BorderThickness="1">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Popup">
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="PopupAnimation" Value="Slide" />
        <Setter Property="StaysOpen" Value="False" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
        <Setter Property="Background" Value="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="Height" Value="6" />
        <Setter Property="MaxHeight" Value="20" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="i:StyleInteraction.Template">
            <Setter.Value>
                <i:InteractionTemplate>
                    <local:ProgressBarBehaviour />
                </i:InteractionTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid ClipToBounds="True" x:Name="PART_Main">

                        <Grid.Resources>
                            <Storyboard x:Name="IndeterminateAnimation" x:Key="IndeterminateAnimation" RepeatBehavior="Forever">
                                <DoubleAnimation Storyboard.TargetName="EllipseGrid"
                                               Duration="0:0:3.917"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" From="0" To="0" />

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.333" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.5" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" KeySpline="0.4,0,0.6,1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationWellPosition)}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:3.667" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.EllipseAnimationEndPosition)}" KeySpline="0.4,0,0.6,1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimation Storyboard.TargetName="EllipseGrid" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                <DoubleAnimation Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="EllipseGrid" Opacity="0">
                            <Grid.RenderTransform>
                                <TranslateTransform />
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E1" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="7" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E2" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="5" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E3" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="3" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E4" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Distance)}" />
                            <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform />
                                </Border.RenderTransform>
                                <Ellipse x:Name="E5" Fill="{TemplateBinding Foreground}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Diameter)}" RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform />
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                        </Grid>
                        <Border x:Name="PART_Indicator" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Rectangle x:Name="ProgressBarIndicator" Margin="{TemplateBinding Padding}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(t:ProgressBarProperties.Value)}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent" Margin="0,2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledTextBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.BackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator.Bullet>
                            <Grid Width="13" Height="13" VerticalAlignment="Center">
                                <Ellipse x:Name="Border" StrokeThickness="1" UseLayoutRounding="True" Stroke="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" Fill="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" SnapsToDevicePixels="True" />
                                <Ellipse x:Name="CheckMark" StrokeThickness="5" UseLayoutRounding="True" Stroke="Transparent" Fill="{StaticResource {x:Static t:CauldronTheme.ComboBoxArrowBrush}}" Visibility="Hidden" SnapsToDevicePixels="True" />
                                <Ellipse x:Name="InderminateMark" Margin="1" UseLayoutRounding="True" StrokeThickness="0" Fill="{StaticResource {x:Static t:CauldronTheme.ButtonbackBrush}}" Visibility="Hidden" SnapsToDevicePixels="True" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <Grid>
                            <Rectangle x:Name="FocusVisualStyle" Margin="1,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                       StrokeThickness="1" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" StrokeDashArray="1 2" Visibility="Hidden" />
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusVisualStyle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.LightAccentBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledTextBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledTextBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.DisabledBackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static t:CauldronTheme.BackgroundBrush}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1" BorderBrush="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" Background="{StaticResource {x:Static t:CauldronTheme.LightBackgroundBrush}}" />
                                <Path Visibility="Hidden" UseLayoutRounding="True" Stroke="{StaticResource {x:Static t:CauldronTheme.ComboBoxArrowBrush}}" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="True" StrokeStartLineCap="Flat" StrokeLineJoin="Miter" StrokeEndLineCap="Flat" StrokeThickness="2" Data="M 0 3 L 3 6 L 7 0" />
                                <Rectangle Visibility="Hidden" UseLayoutRounding="True" Fill="{StaticResource {x:Static t:CauldronTheme.ComboBoxArrowBrush}}" Stroke="Transparent" Margin="0" StrokeThickness="5" x:Name="InderminateMark" SnapsToDevicePixels="True" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <Grid>
                            <Rectangle x:Name="FocusVisualStyle" Margin="1,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                       StrokeThickness="1" StrokeDashCap="Round" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="{StaticResource {x:Static t:CauldronTheme.AccentBrush}}" StrokeDashArray="1 2" Visibility="Hidden" />
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=CheckBox}}" />
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusVisualStyle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static t:CauldronTheme.LightBorderBrush}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>